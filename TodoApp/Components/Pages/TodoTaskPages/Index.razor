@page "/todotasks"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using TodoApp.Models
@using TodoApp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<TodoApp.Data.TodoAppContext> DbFactory

<PageTitle>To-do</PageTitle>

<h1>"To-do" tasks management</h1>

<p>
    <a href="todotasks/create">Add a new task</a>
</p>

<QuickGrid Class="table" Items="context.Task.OrderBy(t => t.IsCompleted)">
    <TemplateColumn Title="Is completed?" Context="todotask" Sortable="true">
        @if (todotask.IsCompleted)
        {
            <span style="color:green;">&#x2611;</span> @* ☑ check mark *@
        }
        else
        {
            <span style="color:red;">&#x2610;</span> @* ☐ empty box *@
        }
    </TemplateColumn>
    <PropertyColumn Property="todotask => todotask.TaskName" Title="The task" Sortable="true" />
    <PropertyColumn Property="todotask => todotask.DueDate" Title="Due date" Format="dd/MM/yyyy" Sortable="true" />

    <TemplateColumn Context="todotask">
        <a href="@($"todotasks/edit?id={todotask.Id}")">Edit</a> |
        <a href="@($"todotasks/details?id={todotask.Id}")">Details</a> |
        <a href="@($"todotasks/delete?id={todotask.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private TodoAppContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
